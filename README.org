* About
My personal [[https://github.com/hlissner/doom-emacs][doom emacs]] config files. Used to develop and org.

Below the instruction to recreate my complete environment.

* Dependecies
After a successful installation of =emacs= and =doom emacs= in order to get everything to work some packages have to be installed/configured.
** OS packges
Install the following packages with your packet manager My system is Arch based but names should be clear enough
#+begin_src sh :dir "/sudo::"
pacman -S python3 python-pip git curl silversearcher-ag ripgrep fd pandoc tidy clojure-lsp-bin xdebug ispell ccls
#+end_src
And in AUR
#+begin_src sh :dir "/sudo::"
yay -S mu mbsync-git rtags
#+end_src
** npm packages
Install [[https://nodejs.org/][node.js]]
#+begin_src sh :dir "/sudo::"
npm -g i intelephense dockerfile-language-server-nodejs stylelint js-beautify
#+end_src
* Instructions
** PHP
*** LSP - Intelephense
Create a licence.txt file in =~/intelephense/licence.txt= with your licence key (optional)
*** Tools
- install [[https://github.com/stephpy/vim-php-cs-fixer][php-cs-fixer]]
#+begin_src sh :dir "sudo::"
wget https://cs.symfony.com/download/php-cs-fixer-v3.phar -O php-cs-fixer
chmod +x php-cs-fixer
mv php-cs-fixer /usr/local/bin
#+end_src
- install [[https://github.com/phpactor/phpactor][phpactor]]
#+begin_src sh :dir ~/work
git clone git@github.com:phpactor/phpactor
sudo ln -s /path/to/phpactor/bin/phpactor /usr/local/bin/phpactor
#+end_src
*** Debugger
Confirm xdebug (>= 3 version), use the following configuration
#+begin_src ini
zend_extension=xdebug.so
xdebug.mode=debug
xdebug.client_port=9003
xdebug.log=/tmp/xdebug.log
#+end_src

*** Debugging client
Using [[https://emacs-lsp.github.io/dap-mode/][DAP Mode]] for php debugging. Once enabled a =dap-php-setup= command is available. This command should download [[https://marketplace.visualstudio.com/items?itemName=felixfbecker.php-debug][felixfbecker vscode package]] but it did not work for me

Steps in order to make it work:
- download the =felixfbecker.php-debug-1.19.0.vsix= package from the vscode marketplace page by clicking on =Download Extension=
- the vsix package is a zip file, extract it wherever you please and move the =extension= folder as such:
 #+begin_src sh
mv extension ~/.emacs.d/.local/etc/dap-extension/vscode/felixfbecker.php-debug
 #+end_src
 it may be necessary to execute =dap-php-setup= at least onece in order to create the correct directories.
- Now you should be able to =dap-debug= your code

** C/C++
*** TODO write this

** Haskell
Install the following packages:
#+begin_src sh :dir "sudo::"
pacman -S ghc ghc-static haskell-language-server
#+end_src

** Mu4e
I use =mbsync= to sync mail with my gmail account, for the configuration I followed [[https://github.com/daviwil/emacs-from-scratch/blob/629aec3dbdffe99e2c361ffd10bd6727555a3bd3/show-notes/Emacs-Mail-01.org][this]] and [[https://www.ict4g.net/adolfo/notes/emacs/reading-imap-mail-with-emacs.html][this]] instructions.

#+begin_src sh
mkdir ~/Mail-gmail
#+end_src

Create the =~/.mbsyncrc= configuration file. [[https://github.com/stonedz/my-dotfiles/blob/master/.mbsyncrc][My .mbsyncrc file]].
Then run this to download the emails locally and update mu's index. =mbsync -a= could take a while to finish if you have a lot of emails.
#+begin_src sh
mbsync -a
mu init --maildir=~/Mail-gmail --my-address=paolo.fagni@gmail.com
mu index
#+end_src

In order to send emails without entering the password each time add this to your =~/.authinfo.gpg=
#+begin_src
machine smtp.gmail.com login <your email here> password <your password here> port 587
#+end_src
Note that if you use two factor authentication on gmail, you cannot use your gmail password but you need
to create an [[https://support.google.com/mail/answer/185833?hl=en-GB][app password]] and use that instead.

** Syncthing
I use [[https://syncthing.net/][Syncthing]] to sync my org files to my other devices.

#+begin_src sh
pacman -S syncthing
#+end_src

To enable syncthing to start automatically for a specified user
#+begin_src sh :dir "sudo::"
mv /usr/lib/systemd/system/syncthing\@.service /usr/lib/systemd/system/syncthing\@<user>.service
systemctl start syncthing\@<user>.service
systemctl enable syncthing\@<user>.service
#+end_src

You can now access [[http://127.0.0.1:8384]] to access syncthing configuration interface.
* Notes
- =~/work= is the project dir used by [[https://github.com/bbatsov/projectile][projectile]] by using =projectile-discover-projects-in-search-path= ( SPC p D )
